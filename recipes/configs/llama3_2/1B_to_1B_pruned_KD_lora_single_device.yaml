# Config for single device knowledge distillation (KD) in knowledge_distillation_single_device.py
# using a LLAMA3 teacher and student model
#
# This config assumes that you've ran the following commands before launching KD:
# First download the student and teacher models
#   tune download meta-llama/Llama-3.2-1B-Instruct --output-dir /tmp/Llama-3.2-1B-Instruct --ignore-patterns "original/consolidated.00.pth"
#   tune download meta-llama/Meta-Llama-3.1-8B-Instruct --output-dir /tmp/Meta-Llama-3.1-8B-Instruct --ignore-patterns "original/consolidated.00.pth"
#
# You get better results using KD if the teacher model has already been fine-tuned on the target dataset:
#   tune run lora_finetune_single_device --config llama3_1/8B_lora_single_device
#
# To launch on a single device, run the following command from root:
#   tune run knowledge_distillation_single_device --config llama3_2/8B_to_1B_KD_lora_single_device
#
# This config works only for training on single device.


output_dir: ./llama3_2_1B_to_1B_pruned/KD_lora_single_device # /tmp may be deleted by your system. Change it to your preference.

# Model Arguments
model:
  _component_: torchtune.models.llama3_2.lora_llama3_2_1b_pruned
  # lora_attn_modules: ['output_proj']
  lora_attn_modules: []
  apply_lora_to_mlp: True
  apply_lora_to_output: False
  lora_rank: 64  # higher increases accuracy and memory
  lora_alpha: 128  # usually alpha=2*rank
  lora_dropout: 0.0
  intermediate_dim: 7373
  tie_word_embeddings: True

checkpointer:
  _component_: torchtune.training.FullModelHFCheckpointer
  checkpoint_dir: /workspace/qeff_work/torchtune/llama_3_2_1b_ffn_10%_pruned_pytorch_native
  checkpoint_files: [
    model_merged.pth,
  ]
  recipe_checkpoint: null
  output_dir: ${output_dir}
  model_type: LLAMA3_2

# Tokenizer
tokenizer:
  _component_: torchtune.models.llama3.llama3_tokenizer
  path: ./tmp/llama_3_2_1b/original/tokenizer.model
  max_seq_len: null

resume_from_checkpoint: False
save_adapter_weights_only: False

# Teacher checkpoint
teacher_model:
  _component_: torchtune.models.llama3_2.llama3_2_1b

teacher_checkpointer:
  _component_: torchtune.training.FullModelHFCheckpointer
  checkpoint_dir: ./tmp/llama_3_2_1b/
  checkpoint_files: [
    model.safetensors,
  ]
  recipe_checkpoint: null
  output_dir: ${output_dir}
  model_type: LLAMA3_2

# Dataset and Sampler
dataset:
  # _component_: torchtune.datasets.alpaca_cleaned_dataset
  _component_: torchtune.datasets.wikitext_dataset
  packed: False  # True increases speed
seed: 1234
shuffle: True
batch_size: 1

# Optimizer and Scheduler
optimizer:
  _component_: torch.optim.AdamW
  fused: True
  weight_decay: 0.01
  lr: 3e-4
lr_scheduler:
  _component_: torchtune.training.lr_schedulers.get_cosine_schedule_with_warmup
  num_warmup_steps: 100

loss:
  _component_: torchtune.modules.loss.CEWithChunkedOutputLoss
  num_output_chunks : 100

kd_loss:
  _component_: torchtune.modules.loss.ForwardKLWithChunkedOutputLoss
  num_output_chunks : 100
kd_ratio: 0.5

# Training
epochs: 1
max_steps_per_epoch: null
gradient_accumulation_steps: 8  # Use to increase effective batch size
clip_grad_norm: null
compile: False  # torch.compile the model + loss, True increases speed + decreases memory

# Logging
metric_logger:
  _component_: torchtune.training.metric_logging.DiskLogger
  log_dir: ${output_dir}/logs
log_every_n_steps: 1
log_peak_memory_stats: True

# Environment
device: cuda
dtype: fp16

# Activations Memory
enable_activation_checkpointing: True  # True reduces memory
enable_activation_offloading: True  # True reduces memory



# Profiler (disabled)
profiler:
  _component_: torchtune.training.setup_torch_profiler
  enabled: False

  #Output directory of trace artifacts
  output_dir: ${output_dir}/profiling_outputs

  #`torch.profiler.ProfilerActivity` types to trace
  cpu: True
  cuda: True

  #trace options passed to `torch.profiler.profile`
  profile_memory: False
  with_stack: False
  record_shapes: True
  with_flops: False

  # `torch.profiler.schedule` options:
  # wait_steps -> wait, warmup_steps -> warmup, active_steps -> active, num_cycles -> repeat
  wait_steps: 5
  warmup_steps: 3
  active_steps: 2
  num_cycles: 1
